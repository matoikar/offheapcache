/**
 * Copyright 2014 Matti Oikarinen
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.elegantscale.util.hash;

import java.security.SecureRandom;

/**
 * Uses a table of random numbers to fill all bits. For security critical use cases, create an instance with a new set
 * of random numbers.
 */
public class NonLinearLookupTableHash implements HashFunction {
    private long[] lookupTable = new long[]{
            -3113892198884889826L,-5683040467484578218L,3364675418093772124L,-1589516450989469024L,
            5485492802363412710L,-144438944041392406L,-4517410590429761519L,6156807100939961689L,
            -6543380911423660115L,4567584644567768614L,-4117408838825470749L,-6956327970001951189L,
            -6202344027082740118L,4760035119497130038L,5249036399585205399L,3081353615528298300L,
            -3992914302488782692L,-2016412461889010406L,-2970579839829239656L,-7883872145284565717L,
            -599101052186697467L,-3639844245937737216L,4393415307990664503L,-1821296260391398162L,
            8397502282252092296L,7520536154320695672L,6942450246747422971L,2119141638306300578L,
            -9178953333486108432L,5595188824090044966L,4023012743215336014L,5031055401475664277L,
            -4297751237033683688L,-971218919208518983L,-5208648719974245382L,2091794954135017744L,
            -7251778229564443584L,-1200853940909957718L,5714390409924150517L,5589038317728569155L,
            6563919355235236985L,-75328888197541509L,-9101894770137025726L,3416533298906980499L,
            -8308368802150961696L,-4536606595508364228L,-1351748694575262146L,4177740844510003377L,
            -7120822080610963823L,7215109215301606716L,-8730693209068525141L,-3868152785752022810L,
            1914395105795094129L,2662431404330814729L,6766751313158084119L,-2113084428463842844L,
            -5499321076951906104L,5618101864181404927L,-2770187812046934837L,-8083795732821359098L,
            582032920814074390L,2622026322187890047L,7908383555854920160L,-1665590235987710695L,
            1346713835287388122L,8392845009660535314L,-6574855367621919979L,-39482274880581188L,
            -214831481831391001L,-2681215904002754521L,8854947514194975096L,7094742404830815671L,
            7835275702526124520L,5151474991687020127L,-7815867478659286354L,4278809103579283022L,
            -9132310993631363703L,-2775670753788964395L,-68070366673346127L,4316263152614743146L,
            9091789856575392379L,1042191343356432716L,-5726436704550858952L,8696132413342196115L,
            -115023270235282394L,6795126378581592652L,-1569085211962890999L,-7348906583583621530L,
            -5541247834075607532L,-3158436190834754688L,-3358971689933990683L,1216825490257676552L,
            7399827361193080998L,-8085358684625785739L,5502495123290048507L,8751227723681480883L,
            7510346709218918323L,4828716953816816802L,569555601113123062L,3581904974496864625L,
            -4962663804587223612L,7416039526333683262L,-242617833299709395L,246292621570624599L,
            -6975604476819677878L,7832103585023783268L,5580180596415416529L,7542401830689950830L,
            4792303124468078679L,-7001115189722975034L,8053411470319015211L,7955908317449841739L,
            -5703686725020706336L,7750390831935444934L,-2420954897953394126L,-6758361479793638652L,
            -4706990602880858280L,-7476392970252938618L,8638744651034770690L,-5559675105694292078L,
            6957941942984531721L,-8977262938685070222L,-8868037606033513475L,5495236941152663434L,
            3345365518039554986L,686525193723916615L,4140780719791343780L,4956940395539106708L,
            -4425066655899039204L,-6407773876167209549L,-2340294980535579578L,-4276900184328089539L,
            -5946120730158915275L,7814438440728896627L,5327284087127949591L,-1839287917215274467L,
            -6359420360327494410L,-7584524689437470744L,2821474859884516333L,2635454223299130458L,
            -1465147293009677809L,4925716549333154452L,5026804814898916740L,-4679506020917923757L,
            -8026694454129109035L,3129207836562343326L,5084800512192122525L,3692976792282901187L,
            -4005183804386585309L,-4823648501107654671L,-4414854142711839740L,-3376488500519850697L,
            -4279285084445212725L,5603423637865805283L,-5618651504092280044L,815530897161247362L,
            -1561984721932946551L,2949299530201292785L,9043414144546041530L,2162055194771025822L,
            -1276722617561602968L,-2583220108189628250L,4389253392062220204L,6967274397294902974L,
            7018716444287225575L,1671321876433077970L,888398341896694268L,-5215720371534355661L,
            1082048081710786642L,-6330959704624285753L,35658017880264658L,7675837547307635550L,
            2690828048405895993L,-5158664330044107064L,4523231502917028041L,-1512679157404862736L,
            1633917439391438009L,-7620388920025142442L,-5541456339350854899L,-130793674633144647L,
            -1164088975225644574L,-115060568032299298L,677921812037047093L,-4786714794297900645L,
            3137670439533741154L,-6235269339689790793L,5072185621979229889L,-3500579329215887881L,
            1869575285187010380L,-799744578294195767L,6987496552516989799L,1531950284872185583L,
            5321685312009389776L,-7362547244567531306L,-2936454179699354198L,-7791311446840123347L,
            -4018310418883574455L,-4739824211908332186L,-4904856470904239142L,4636116844875555368L,
            -945801915023585626L,2684969698179061016L,5836391838819954298L,-3183803929312932334L,
            -6278791861158308928L,1705380198441560214L,4788977771175493459L,9163169864890616757L,
            -6142493810139036110L,-5637317071589039648L,5456753507754202575L,-4559190793689325451L,
            3653236436811527532L,-3525267243610546057L,-2255390933071391894L,-7882018993821335372L,
            3988557687489211564L,8222854192538670323L,6154484921736752885L,-8189825305075799506L,
            -3397115712584885630L,-2801634862902252964L,-1172711444152880052L,2789860685698996810L,
            6057959674409530502L,2397021600690484216L,-7657498288591639124L,2836456986573102365L,
            -7194020250068828891L,6647979245491293617L,-7869454697071484767L,3678643052914967609L,
            3728381636623403986L,-7535412842267394548L,5161420092959289690L,5764535969497880391L,
            -4107295941215990930L,5386997619784502483L,-2586312329576647349L,3172104083754824684L,
            4153378065230566315L,-7590438797268318186L,8889526506010013422L,-8763036546725398240L,
            571064271617735067L,-1690615904611674238L,-3739604254406314097L,7842998050300811587L,
            -2790468453726688916L,-1881975395870724342L,7537516131909974072L,8949700704240003892L,
            -6245472311361167500L,-8489252816228010862L,4535178893421000511L,6619376726574112764L
    };

    public NonLinearLookupTableHash() {
    }

    public NonLinearLookupTableHash(boolean generateNewTable) {
        if(generateNewTable) {
            SecureRandom random = new SecureRandom();
            lookupTable = random.longs().limit(256).toArray();
        }
    }

    @Override
    public long hash(byte[] value) {
        long h = 0;
        for (byte b : value) {
            h ^= lookupTable[b + 128];
        }

        return h;
    }

    @Override
    public long hash(byte[] value, int offset, int length) {
        long h = 0;
        for (int i = 0; i < length; i++) {
            h ^= lookupTable[value[offset + i] + 128];
        }

        return h;
    }
}
